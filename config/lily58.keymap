/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        // zmk,backlight = &backlight;
        // zmk,display = &display;
    };

    combos {
        compatible = "zmk,combos";

        Start_Debuging {
            bindings = <&kp F5>;
            key-positions = <51 27>;
        };

        language {
            bindings = <&kp LC(SPACE)>;
            key-positions = <24 33>;
        };

        scr_shot_clip {
            bindings = <&kp LC(LS(LG(KP_NUMBER_3)))>;
            key-positions = <57 3>;
        };
    };

    macros {
        go_func: go_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(F) &kp F &kp U &kp N &kp C &kp LPAR &kp RPAR &kp SPACE &kp LPAR &kp E &kp R &kp R &kp SPACE &kp E &kp R &kp R &kp O &kp R &kp RPAR &kp SPACE &kp RBKT &kp RET &kp TAB &kp R &kp E &kp T &kp U &kp R &kp N &kp RET &kp RBRC>;
            label = "GO_FUNC";
        };
    };

    // backlight {
    //     compatible = "zmk,backlight";
    //     label = "Backlight";
    //     levels = <5>;
    //     pin = <&gpio0 13 GPIO_ACTIVE_HIGH>;
    // };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                                           &kp N6  &kp N7    &kp N8     &kp N9   &kp N0                     &mt TILDE GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                                                            &kp Y   &kp U     &kp I      &kp O    &kp P                      &mt MINUS PLUS
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                                                            &kp H   &kp J     &kp K      &kp L    &mt LEFT_PARENTHESIS SEMI  &mt RIGHT_PARENTHESIS SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &mt LEFT_PARENTHESIS LBKT    &mt RIGHT_PARENTHESIS RBKT  &kp N   &kp M     &kp COMMA  &kp DOT  &mt TILDE FSLH             &kp RSHFT
                           &kp LALT  &kp LGUI  &tog 1  &kp SPACE                    &kp ENTER                   &tog 2  &kp BSPC  &kp RGUI
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |OUT_tog|       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans    &trans  &trans    &trans      &trans                       &trans     &trans     &trans     &trans    &trans    &trans
&kp F1     &kp F2    &kp F3  &kp F4    &kp F5      &kp F6                       &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PRCNT                    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans     &trans    &trans  &trans    &trans      &trans     &trans    &trans  &trans     &kp MINUS  &kp PLUS   &trans    &trans    &kp PIPE
                             &trans    &trans      &trans     &trans    &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp TILDE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                    &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp KP_EQUAL
&trans     &trans           &trans           &trans           &trans           &trans                             &trans           &trans           &kp UP           &trans           &trans           &kp KP_PLUS
&kp F1     &kp F2           &kp F3           &kp F4           &kp F5           &kp F6                             &kp HOME         &kp LEFT         &kp DOWN         &kp RIGHT        &trans           &kp KP_MINUS
&kp F7     &kp F8           &kp F9           &kp F10          &kp F11          &kp F12          &trans    &trans  &kp END          &trans           &trans           &trans           &trans           &kp BSLH
                                             &trans           &trans           &mo 3            &trans    &trans  &trans           &trans           &trans
            >;
        };

        controls {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bl BL_ON     &bl BL_OFF    &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &go_func      &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
